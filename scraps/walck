body {
    text-align: center;
  background-color: gainsboro;
  /* Use a system font, if none are available use an available sans-sarif */
  font-family: system-ui, sans-serif;
  margin: 0;
  background-image: url(/ice.jpeg);
}

.board {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  width: 325px;
  margin-left: 40%;
  background-image: url(background.jpg);
}

.sqr {
  width: 30%;
  aspect-ratio: 1/1;
  border: 3px solid black;
  font-size: 64px;
  text-align: center;
}


/ Variables to track game state
let board;
let turn;
let winner;
let tie;

// Cache DOM elements
const squareEls = document.querySelectorAll('.sqr');
const messageEl = document.querySelector('.message');

console.log("Squares:", squareEls);
console.log("Message:", messageEl);

// Winning combos
const winningCombos = [
  [0,1,2],[3,4,5],[6,7,8],  // rows
  [0,3,6],[1,4,7],[2,5,8],  // columns
  [0,4,8],[2,4,6]           // diagonals
];

// Initialize game state and render UI
function startGame() {
  board = ['','','','','','','','',''];
  turn = 'X';
  winner = false;
  tie = false;
  render();
}

function render() {
  updateBoard();
  updateMessage();
}

function updateBoard() {
  board.forEach((cell, idx) => {
    squareEls[idx].textContent = cell;
  });
}

function updateMessage() {
  if (!winner && !tie) {
    messageEl.textContent = `It's ${turn}'s turn!`;
  } else if (!winner && tie) {
    messageEl.textContent = "It's a tie!";
  } else {
    messageEl.textContent = `Congratulations, ${turn} wins!`;
  }
}

function handleClick(event) {
  const idx = parseInt(event.target.id);
  if (board[idx] !== '' || winner) return;

  placePiece(idx);
  checkForWinner();
  checkForTie();
  switchPlayerTurn();
  render();
}

function placePiece(idx) {
  board[idx] = turn;
  console.log(board);
}

function checkForWinner() {
  for (const combo of winningCombos) {
    const [a,b,c] = combo;
    if (board[a] !== '' && board[a] === board[b] && board[a] === board[c]) {
      winner = true;
      return;
    }
  }
  winner = false;
}

function checkForTie() {
  if (winner) return;
  tie = !board.includes('');
  console.log('Tie?', tie);
}

function switchPlayerTurn() {
  if (winner) return;
  turn = turn === 'X' ? 'O' : 'X';
  console.log('Turn:', turn);
}

